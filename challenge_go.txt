Разработать сервис-конфигуратор.

Требования к сервису:
- После запуска сервис слушает запросы на определённом порте;
- В качестве запроса сервис получает JSON-строку, представляющую объект, содержаший название конфигурации и название блока параметров;
- Название блока параметров определяет набор и типы параметров, а название конфигурации определяет конкретные значения;
- В ответ сервис отправляет строку с JSON-объектом, содержащим запрошенные параметры.

Требования к реализации:
- Параметры сервис получает из базы данных;
- База данных заполняется параметрами до запуска сервиса;
- В качестве СУБД желательно (но не обязательно) выбрать PostgreSQL.

Требования к разработке:
- Разработка ведётся от тестов (выбор TDD/BDD/DDD и модуля тестирования - на усмотрение исполнителя);
- Нетривиальные участки кода коментируются;
- Для взаимодействия с СУБД использовать существующий модуль ORM (любой);
- Для первоначальной вставки данных в СУБД использовать модуль миграции (любой).

Требования к результату:
- Предоставить миграции (вверх и вниз) для создания хранилица конфигураций в СУБД и посева тестовых данных.
- Предоставить код, организованный в репозиторий на Github или Bitbucket(+) или в архиве(-).
- Покрытие кода тестами должно быть не менее 70%

Пример запроса:
{
"Type": "Develop.mr_robot",
"Data": "Database.processing"
}

Пример ответа:
{
"host": "localhost",
"port": "5432",
"database": "devdb",
"user": "mr_robot",
"password": "secret",
"schema": "public"
}

Запрос:
{
"Type": "Test.vpn",
"Data": "Rabbit.log"
}

Ответ:
{
"host": "10.0.5.42",
"port": "5671",
"virtualhost": "/",
"user": "guest",
"password": "guest"
}
